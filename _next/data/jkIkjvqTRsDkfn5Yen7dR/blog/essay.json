{"pageProps":{"category":"essay","matterPostList":["---\nid: code-review\ntitle: 1년동안 코드리뷰를 하면서 느낀점\ndate: 2023-05-21\ncategory: essay\nthumb_nail: /blog/images/code-review/thumb_nail.png\nsummary: 2022년 1월에 첫 회사에서 프론트엔드 개발을 시작하면서 지금까지 많은 것을 배웠다. 그 중 하나는 왜 코드리뷰를 해야 하는지, 어떻게 코드리뷰를 해야 하는지를 배운 것이다. 사실 취업 준비를 할 때 프로젝트를 같이하는 사람들끼리 코드리뷰를 진행하기도 했었다. 하지만 그 때는 정해진 규칙도 없고 무엇을 리뷰해야하는 지도 잘 알지 못했기 때문에 효과를 보지 못했다. 그래서 나의 경험을 공유하여 아직 코드리뷰를 하지 않는 팀에게 코드리뷰를 도입할 수 있도록 도움을 주고싶다.\n---\n\n# 1년동안 코드리뷰를 하면서 느낀점\n\n## Intro\n\n2022년 1월에 첫 회사에서 프론트엔드 개발을 시작하면서 지금까지 많은 것을 배웠다. 그 중 하나는 왜 코드리뷰를 해야 하는지, 어떻게 코드리뷰를 해야 하는지를 배운 것이다. 사실 취업 준비를 할 때 프로젝트를 같이하는 사람들끼리 코드리뷰를 진행하기도 했었다. 하지만 그 때는 정해진 규칙도 없고 무엇을 리뷰해야하는 지도 잘 알지 못했기 때문에 효과를 보지 못했다. 그래서 나의 경험을 공유하여 아직 코드리뷰를 하지 않는 팀에게 코드리뷰를 도입할 수 있도록 도움을 주고싶다.\n\n## 왜 코드리뷰를 해야할까?\n\n1년 동안 코드리뷰를 진행하면서 크게 2가지 측면에서 필요성을 느꼈다.\n\n### 1.팀원의 부재\n\n규모가 작은 팀일수록 각각의 팀원의 역할이 매우 중요하다. 만약 개발자 한 명이 하나의 프로젝트 전체를 맡고 있다면 이 개발자가 부재 중일 때는 프로젝트의 진도가 나가지 못할 것이고 에러에 쉽게 대응할 수 없을 것이다. 또는 여러 명의 개발자가 하나의 프로젝트를 맡고 있다고 하더라도 소통 없이 본인의 코드만 신경 쓴다면 다른 개발자가 부재 중일 때 그 개발자의 코드를 파악하여 대응하는 데 오랜 시간이 걸릴 것이다. 이처럼 프로젝트마다 개발자 한 명의 의존도가 높다면 프로젝트가 위험해질 수 있다.\n\n하지만 코드 리뷰를 진행했다면 다른 개발자가 작성한 코드를 미리 파악하고 있기 때문에 대응하는데 그리 오랜 시간이 걸리지 않을 것이며 팀원이 부재중이더라도 프로젝트의 개발은 계속해서 평소와 다를 것 없이 진행될 것이다.\n\n### 2.개인의 성장\n\n대부분의 개발자들은 꾸준히 공부를 한다. 특히, 주니어 개발자 입장에서는 아직 모르는 것이 많고 새로운 기술들이 빠르게 나오기 때문에 꾸준히 공부할 수밖에 없다. 하지만 자는 시간과 회사에서 일을 하는 시간을 빼면 개개인의 차이가 있겠지만 3~5시간 정도를 오로지 개인 공부를 위해 투자할 수 있다.\n\n하지만 회사에서도 개인의 성장을 위한 시간을 만들 수 있다. 경험상 그중 하나는 코드 리뷰를 하는 시간이었다. 나는 6개월 동안 하나의 프로덕트에 2명의 팀원과 일을 한 적이 있다. 시간에 비해 개발해야 할 양이 많았지만 반드시 PR(Pull Request)를 한 후에 2명의 팀원에게 코드 리뷰를 받고 머지를 하도록 정했다.\n\n사실 개발할 시간도 적은데 코드 리뷰까지 하려고 하니 힘들었던 적도 있었다. 하지만 코드 리뷰를 하면서 다음과 같은 것들을 배웠다.\n\n- 코드의 가독성을 높이기 위해 고민한 시간\n- 다른 사람의 코드를 파악하는 역량\n- 기존에 사용하고 있던 라이브러리 중 알지 못했던 내용들\n- 팀원들과 더 좋은 코드를 위한 토론의 시간\n\n이처럼 코드 리뷰를 하는 동안에도 개인적으로 성장의 시간이었다. 그렇기 때문에 지금까지도 반드시 코드 리뷰를 하고 있고, 아직도 많은 것을 배우고 있다.\n\n## 효과적인 코드리뷰 방법\n\n코드 리뷰의 효과를 얻기 위해서는 체계적인 접근이 필요하다. 코드 리뷰를 도입한 초기에 많은 시행착오를 겪었지만 경험이 쌓일수록 팀 전체적으로 효과를 얻기 위한 방법과 규칙을 정하였다. 다음은 다른 사람의 코드를 리뷰할 때와 본인이 코드 리뷰를 요청할 때로 나눠서 규칙과 방법을 정리한 것이다.\n\n### 리뷰를 할 때\n\n**1.본인 만의 루틴 만들기**\n\n리뷰 경험이 많지 않은 초창기에는 어디서부터 무엇을 리뷰해야 할지 막막하기만 하다. 그래서 리뷰할 때 체크 리스트를 만들어 습관이 될 때까지 지키는 것이 좋다. 예를 들면 다음과 같다.\n\n- 변경 사항에서 오타 확인하기\n- 컨벤션과 다른 코드가 있는지 확인하기\n- 기능이 정상적으로 동작하는지 확인하기\n- 불필요한 연산은 없는지 확인하기\n\n위에서 제시한 4개의 항목처럼 리뷰를 할 때마다 체크 리스트를 보면서 리뷰를 한다면 조금 더 꼼꼼히 리뷰를 하게 되고, 팀원들에게 더 도움이 된다. 개인적으로는 오타를 확인하거나 기능이 정상적으로 동작하는지 확인하는 등의 큰 그림을 본 이후에 성능을 최적화하는 등의 세세한 부분으로 파악하는 편이다.\n\n**2.본인이라면 어떻게 했을지 생각하기**\n\n리뷰를 할 때 핵심이 되는 로직들이 있다. 그러한 로직들을 보고 나라면 어떻게 했을지 생각해 보는 것이다. 이렇게 했을 때 2가지 장점을 얻을 수 있다.\n\n첫 번째는 전체적인 코드 파악이 빠르다. 내가 작업할 때는 많은 고민을 하고 시간을 들여서 하기 때문에 시간이 지나더라도 쉽게 파악이 가능하다. 하지만 다른 사람이 작업한 내용은 리뷰를 할 때 한 것이 전부일 수 있다. 그렇기 때문에 리뷰 시간에 내가 작업한다면 어떻게 했을까를 시작으로 설계를 해보는 것이다. 작업한 사람만큼의 고민과 시간이 들어갈 수는 없어도 최소한 시간이 지나더라도 쉽게 파악할 수 있고, 이것이 쌓이면 전체적인 코드를 수월하게 파악할 수 있게 된다.\n\n두 번째는 더욱더 책임감을 느낄 수 있다는 것이다. 하나의 소프트웨어는 수많은 코드로 이루어진다. 그중에 본인의 코드는 극히 일부분일 수 있다. 이때 자칫 본인이 작성한 코드에만 문제가 없으면 안심하는 등의 무책임한 태도가 생길 수 있다. 하지만 다른 사람의 코드를 보며 본인이라면 어떻게 할지 생각한다면 점점 주인의식이 생기는 코드 분량이 많아진다는 느낌이 들고 책임감을 느낄 수 있다. 책임감을 느끼면 제품에 애착을 갖고 본인이 더 좋은 코드를 위해 노력하는 선순환이 될 것이다.\n\n### 리뷰를 요청할 때\n\n**1.적당한 크기로 분할하기**\n\n본인의 시간뿐만 아니라 팀원들의 시간도 소중하다. 만약 본인이 다른 팀원의 코드를 리뷰해야 하는데 리뷰해야 할 코드가 3,000줄이 된다면 어떤 기분이 들지 상상해 보자. 본인이 해야 할 작업도 많고 시간도 촉박한데 3,000줄의 코드를 파악해야 하니 시작하기도 전에 지칠 것이다.\n\n또한 코드의 양이 많다 보니 코드 파악하는 시간도 오래 걸리고 꼼꼼한 리뷰가 진행될 확률이 적어진다. 따라서 팀원들의 시간도 절약하고 본인도 더 효과적인 리뷰를 받기 위해서는 적당한 크기로 작업을 나누어 리뷰를 받는 것이다. 작업을 나누기 애매했을 때는 commit을 분할하여 PR을 올릴 수도 있을 것이다.\n\n**2.본인이 작업한 내용 정리하기**\n\n팀원이 리뷰를 올렸을 때 추가적인 설명 없이 리뷰를 요청한다면 어떤 생각이 들까? 대체 어떤 작업을 한 것이지? 이렇게 설계한 기준이 뭐지? 등 다양한 궁금점이 있을 것이다. 그렇기 때문에 리뷰를 요청할 때는 본인이 작업한 내용을 가독성 있게 정리하는 것이 중요하다.\n\n현재 작업에 대한 배경지식을 제공하고 작업하면서 고민이 되었던 부분은 무엇이며 다른 팀원들의 의견을 요청할 수도 있을 것이다. 이러한 내용이 PR에 포함된다면 불필요한 커뮤니케이션을 줄여 시간을 절약할 수 있다.\n\n## 마무리\n\n각자 코드 리뷰를 경험하면서 느끼는 장단점이 다를 수 있다. 하지만 개인적으로 코드 리뷰를 하면서 느낀 단점보다는 장점이 훨씬 크게 작용하기 때문에 반드시 해야 한다는 생각을 갖고 있다. 그리고 이렇게 느끼게 된 경험과 근거를 이번 글에 정리를 해봤다.\n\n아직 코드 리뷰를 시작하지 않았거나 하는 둥 마는 둥 하는 팀이 있다면 이 글이 도움이 되었으면 좋겠다.\n"],"categoryList":["essay","javascript"]},"__N_SSG":true}